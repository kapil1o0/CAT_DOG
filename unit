from flask import Flask, request, jsonify, send_from_directory
from flask_cors import CORS
from app.utils import preprocess_image, load_models
import numpy as np
import logging

# Initialize logging
logging.basicConfig(level=logging.INFO)

# Load the pre-trained model
model = load_models()

# Define class labels
CLASS_LABELS = ['Cat', 'Dog']

def create_app():
    app = Flask(__name__)
    CORS(app)

    # Health check route
    @app.route('/', methods=['GET'])
    def home():
        return "Flask app is running with pre-trained model!", 200

    # File upload and prediction route
    @app.route('/predict', methods=['POST'])
    def predict():
        if 'image' not in request.files:
            return jsonify({"success": False, "error": "No image provided"}), 400

        file = request.files['image']
        if file.filename == '':
            return jsonify({"success": False, "error": "No file selected"}), 400

        try:
            # Preprocess the uploaded image
            img_array = preprocess_image(file)

            # Perform prediction
            predictions = model.predict(img_array)
            predicted_class = CLASS_LABELS[np.argmax(predictions)]
            confidence = float(np.max(predictions))

            return jsonify({
                "success": True,
                "data": {
                    "predicted_class": predicted_class,
                    "confidence": confidence
                }
            }), 200

        except Exception as e:
            logging.error(f"Error during prediction: {str(e)}")
            return jsonify({"success": False, "error": str(e)}), 500

    # Serve static frontend files
    @app.route('/<path:path>')
    def serve_frontend(path):
        return send_from_directory('frontend', path)

    @app.route('/')
    def serve_index():
        return send_from_directory('frontend', 'index.html')

    return app


if __name__ == "__main__":
    app = create_app()
    app.run(debug=True)
import logging

logging.basicConfig(level=logging.DEBUG)
  